<html xmlns="http://www.w3.org/1999/html">
<head><meta charset="UTF-8">
    <title>Acceptance Test Execution Report </title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"/>
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script>
        !function(){function e(e){t(e),window.PrefixFree&&StyleFix.process()}function t(e){var t=n(),a=document.createElement("style");a.type="text/css",a.className="cp-pen-styles",a.styleSheet?a.styleSheet.cssText=e:a.appendChild(document.createTextNode(e)),c.appendChild(a),t&&t.parentNode.removeChild(t)}function n(){for(var e=document.getElementsByTagName("style"),t=e.length-1;t>=0;t--)if("cp-pen-styles"===e[t].className)return e[t];return!1}function a(e){window.addEventListener?window.addEventListener("message",e,!1):window.attachEvent("onmessage",e)}function s(e,t){try{if(!/codepen/.test(e.origin))return null;if("object"!=typeof e.data)return null;if(e.data.action===t)return e.data}catch(n){}return null}var c=document.head||document.getElementsByTagName("head")[0],r="ACTION_LIVE_VIEW_RELOAD_CSS";a(function(t){var n=s(t,r);n&&e(n.data.css)})}();
        function toggle_visibility(id) {
            var e = document.getElementById(id);
            if (e.style.display == 'none')
                e.style.display = 'block';
            else
                e.style.display = 'none';
        }
    </script>
    <script>
        function sortTableByNumber(id, n) {
            var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
            table = document.getElementById(id);
            switching = true;
            //Set the sorting direction to ascending:
            dir = "asc";
            /*Make a loop that will continue until
            no switching has been done:*/
            while (switching) {
                //start by saying: no switching is done:
                switching = false;
                rows = table.rows;
                /*Loop through all table rows (except the
                first, which contains table headers):*/
                for (i = 1; i < (rows.length - 1); i++) {
                    //start by saying there should be no switching:
                    shouldSwitch = false;
                    /*Get the two elements you want to compare,
                    one from current row and one from the next:*/
                    x = rows[i].getElementsByTagName("TD")[n];
                    y = rows[i + 1].getElementsByTagName("TD")[n];
                    /*check if the two rows should switch place,
                    based on the direction, asc or desc:*/
                    if (dir == "asc") {
                        if (Number(x.innerHTML) > Number(y.innerHTML)) {
                            //if so, mark as a switch and break the loop:
                            shouldSwitch= true;
                            break;
                        }
                    } else if (dir == "desc") {
                        if (Number(x.innerHTML) < Number(y.innerHTML)) {
                            //if so, mark as a switch and break the loop:
                            shouldSwitch = true;
                            break;
                        }
                    }
                }
                if (shouldSwitch) {
                    /*If a switch has been marked, make the switch
                    and mark that a switch has been done:*/
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                    //Each time a switch is done, increase this count by 1:
                    switchcount ++;
                } else {
                    /*If no switching has been done AND the direction is "asc",
                    set the direction to "desc" and run the while loop again.*/
                    if (switchcount == 0 && dir == "asc") {
                        dir = "desc";
                        switching = true;
                    }
                }
            }
        }
        function sortTable(id, n) {
            var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
            table = document.getElementById(id);
            switching = true;
            //Set the sorting direction to ascending:
            dir = "asc";
            /*Make a loop that will continue until
            no switching has been done:*/
            while (switching) {
                //start by saying: no switching is done:
                switching = false;
                rows = table.rows;
                /*Loop through all table rows (except the
                first, which contains table headers):*/
                for (i = 1; i < (rows.length - 1); i++) {
                    //start by saying there should be no switching:
                    shouldSwitch = false;
                    /*Get the two elements you want to compare,
                    one from current row and one from the next:*/
                    x = rows[i].getElementsByTagName("TD")[n];
                    y = rows[i + 1].getElementsByTagName("TD")[n];
                    /*check if the two rows should switch place,
                    based on the direction, asc or desc:*/
                    if (dir == "asc") {
                        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                            //if so, mark as a switch and break the loop:
                            shouldSwitch= true;
                            break;
                        }
                    } else if (dir == "desc") {
                        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                            //if so, mark as a switch and break the loop:
                            shouldSwitch = true;
                            break;
                        }
                    }
                }
                if (shouldSwitch) {
                    /*If a switch has been marked, make the switch
                    and mark that a switch has been done:*/
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                    //Each time a switch is done, increase this count by 1:
                    switchcount ++;
                } else {
                    /*If no switching has been done AND the direction is "asc",
                    set the direction to "desc" and run the while loop again.*/
                    if (switchcount == 0 && dir == "asc") {
                        dir = "desc";
                        switching = true;
                    }
                }
            }
        }
        function filterTableSkipped() {
          var input, filter, table, tr, td, i, txtValue;
          input = document.getElementById("searchField");
          filter = input.value.toUpperCase();
          table = document.getElementById('consolidatedSkipTable');
          tr = table.getElementsByTagName("tr");
          for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[2];
            if (td) {
              txtValue = td.textContent || td.innerText;
              if (txtValue.toUpperCase().indexOf(filter) > -1) {
                tr[i].style.display = "";
              } else {
                tr[i].style.display = "none";
              }
            }
          }
        }
        function filterTableFailed() {
                  var input, filter, table, tr, td, i, txtValue;
                  input = document.getElementById("searchField");
                  filter = input.value.toUpperCase();
                  table = document.getElementById('consolidatedFailTable');
                  tr = table.getElementsByTagName("tr");
                  for (i = 0; i < tr.length; i++) {
                    td = tr[i].getElementsByTagName("td")[2];
                    if (td) {
                      txtValue = td.textContent || td.innerText;
                      if (txtValue.toUpperCase().indexOf(filter) > -1) {
                        tr[i].style.display = "";
                      } else {
                        tr[i].style.display = "none";
                      }
                    }
                  }
        }
        function filterTablePassed() {
                          var input, filter, table, tr, td, i, txtValue;
                          input = document.getElementById("searchField");
                          filter = input.value.toUpperCase();
                          table = document.getElementById('consolidatedPassTable');
                          tr = table.getElementsByTagName("tr");
                          for (i = 0; i < tr.length; i++) {
                            td = tr[i].getElementsByTagName("td")[2];
                            if (td) {
                              txtValue = td.textContent || td.innerText;
                              if (txtValue.toUpperCase().indexOf(filter) > -1) {
                                tr[i].style.display = "";
                              } else {
                                tr[i].style.display = "none";
                              }
                            }
                          }
        }
        $('.accordian-body').on('show.bs.collapse', function () {
            $(this).closest("table")
                .find(".collapse.in")
                .not(this)
                .collapse('toggle')
        })
    </script>
    <style class="cp-pen-styles">@import url("https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,700");
        *,
            *:before,
            *:after {
                box-sizing: border-box;
            }

            body {
                padding: 12px;
                font-family: "Source Sans Pro", sans-serif;
                margin: 0;
                font-size: 14px;
            }

            h1,
            h2,
            h3,
            h4,
            h5,
            h6 {
                margin: 0;
                font-weight: bold;
            }

            a {
                color: #337ab7;
                text-decoration: none;
            }

            span#red {
                color: red;
            }
            span#grey {
                color: grey;
            }
            span#green {
                color: green;
            }

            span#Passed, li#Passed {
                color: green;
            }
            span#Failed,li#Failed {
                color: red;
            }
            span#Skipped,li#Skipped  {
                color: grey;
            }

            td.Failed {
                color : red;
            }

            td.Passed{
                color : green;
            }

            td.Skipped {
                color : grey;
            }

            .container {
                max-width: 1200px;
                margin-right: auto;
                margin-left: auto;
                display: flex;
                justify-content: left;
                align-items: flex-start;
                min-height: 4vh;
            }

            .table {
                width: 100%;
                border: 1px solid #eeeeee;
                font-size: 13px;
            }
            .table tr {
                cursor: pointer;
            }
            .hiddenRow {
                padding: 0 4px !important;
                background-color: #eeeeee;
                font-size: 13px;
            }
            .table-header {
                display: flex;
                width: 100%;
                background: #000;
                padding: 4px 0;
            }
            .table-condensed {
                font-size:14px !important;
            }
            .table-striped {
                width: 100%;
                padding: 4px 0;
                flex: 1 1 35%;
                text-align: center;
                font-size:13px !important;
            }
            .table-striped th{
                background-color:#05090f;
                text-align: center;
                text-transform: uppercase;
                color:white
            }

            .table .thead-high th {
                color: #1a1503;
                background-color: #ff8482;
            }

            .table .thead-medium th {
                color: #1a1503;
                background-color: orange;
            }

            .table .thead-low th {
                color: #1a1503;
                background-color: lightseagreen;
            }
            span.date-test-ran {
                font-size: 13px;
            }

            .table-row {
                display: flex;
                width: 100%;
                padding: 4px 0;
            }
            .table-row:nth-of-type(odd) {
                background: #eeeeee;
            }

            .table-data,
            .header__item {
                flex: 1 1 35%;
                text-align: center;
            }

            .header__item {
                text-transform: uppercase;
            }

            .filter__link {
                color: white;
                text-decoration: none;
                position: relative;
                display: inline-block;
                padding-left: 10px;
                padding-right: 10px;
            }
            .filter__link::after {
                content: "";
                position: absolute;
                right: -22px;
                color: white;
                font-size: 10px;
                transform: translateY(-50%);
                top: 50%;
            }
            .filter__link.desc::after {
                content: "(desc)";
            }
            .filter__link.asc::after {
                content: "(asc)";
            }

            /* Create three columns of equal width */
            .columns {
                float: left;
                width: 33.3%;
                padding: 8px;
            }


            .hostSummary td span {
                display: block;
                font: bold 25px/100px Serif;
                text-align: center;
                color: #777;
                background: #fff;
                border: 5px solid #fff;
                height: 30px;
                width: 30px;
                margin: 1px auto -15px;
                -moz-border-radius: 100px;
                -webkit-border-radius: 100px;
                border-radius: 100px;
                -moz-box-shadow: 0 5px 20px #ddd inset, 0 3px 0 #999 inset;
                -webkit-box-shadow: 0 5px 20px #ddd inset, 0 3px 0 #a94c4c inset;
                box-shadow: 0 5px 20px #967979 inset, 0 3px 0 #999;
            }

            /* Style the list */
            .runSummary {
                list-style-type: none;
                margin: 0;
                padding: 0;
                -webkit-transition: 0.3s;
                transition: 0.3s;
                width: 96px;
            }

            /* Add shadows on hover */
            .runSummary:hover {
                box-shadow: 0 8px 12px 0 rgba(0,0,0,0.2)
            }

            /* Pricing header */
            .runSummary .header {
                background-color: #111;
                color: white;
                font-size: 15px;
            }

            .runSummary h3 span {
                display: block;
                font: bold 25px/100px Serif;
                text-align: center;

                color: #777;
                background: #fff;
                border: 5px solid #fff;
                height: 100px;
                width: 100px;
                margin: 1px auto -15px;
                -moz-border-radius: 100px;
                -webkit-border-radius: 100px;
                border-radius: 100px;
                -moz-box-shadow: 0 5px 20px #ddd inset, 0 3px 0 #999 inset;;
                -webkit-box-shadow: 0 5px 20px #ddd inset, 0 3px 0 #a94c4c inset;
                box-shadow: 0 5px 20px #967979 inset, 0 3px 0 #999;
            }
            .runSummary span {
                display: block;
                font: bold 25px/100px Serif;
                text-align: center;

                color: #777;
                background: #fff;
                border: 5px solid #fff;
                height: 100px;
                width: 100px;
                margin: 1px auto -15px;
                -moz-border-radius: 100px;
                -webkit-border-radius: 100px;
                border-radius: 100px;
                -moz-box-shadow: 0 5px 20px #ddd inset, 0 3px 0 #999 inset;;
                -webkit-box-shadow: 0 5px 20px #ddd inset, 0 3px 0 #a94c4c inset;
                box-shadow: 0 5px 20px #967979 inset, 0 3px 0 #999;
            }

            /* List items */
            .runSummary li {
                padding: 12px;
                text-align: center;
            }

            /* Grey list item */
            .runSummary .grey {
                background-color: #eee;
                font-size: 15px;
                font-weight: bold;
            }

            /* The "Sign Up" button */
            .button {
                background-color: #1a3331;
                border: none;
                color: white;
                padding: 5px 25px;
                text-align: center;
                text-decoration: blink;
                font-size: 14px;
            }

            /* Change the width of the three columns to 100%
            (to stack horizontally on small screens) */
            @media only screen and (max-width: 100%) {
                .columns {
                    width: 100%;
                }
            }

            .table1>tbody>tr>td
            {
                font-size: 12px;
                padding: 8px;
                line-height: 1.2;
                vertical-align: middle;
                text-align: center;
            }
            .table1>tbody>tr>th
            {
                font-size: 13px;
                padding: 8px;
                line-height: 1.42857143;
                vertical-align: middle;
                text-align: center;

            }

            .half-circle {
                height: 48px;
                border-top-left-radius: 48px;
                border-top-right-radius: 48px;
                border: 5px solid #ccbfbf;
                box-sizing: border-box;
            }
            .half-circle li {
                display: block;
                text-align: center;
                color: #777;
            }
            .container img {
                float: left;
                width: 60px;
                height: 60px;
                background-color: transparent;
                border: none;
            }
            .container h1 {
                position: relative;
                top: 18px;
                left: 10px;
                font-family: "Source Sans Pro", sans-serif;
                font-size: 38px;
                font-style: normal;
                font-weight: 550;
                line-height: 17px;
                color: #FF6347;
             }
    </style>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
    <script src="https://netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.5.1/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.8.1/js/lightbox.min.js"></script>
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
        google.charts.load("current", {packages:["corechart"]});
        google.charts.setOnLoadCallback(function() {drawChart({
                "title": "Testcases",
                "passed": <%= tcPassed %>,
                "failed": <%= tcFailed %>,
        })
        });
        google.charts.setOnLoadCallback(function() {drawChart({
                "title": "Teststeps",
                "passed": <%= stepsPassed %>,
                "failed": <%= stepsFailed %>,
        })
        });

    </script>
    <script>
        <%= piechart %>
    </script>
</head>
<body>
<div class="container">
    <img src="https://cdn1.iconfinder.com/data/icons/science-1-2/128/37-512.png" alt="Report">
    <h1>PROTRACTOR EXECUTION REPORT</h1>
</div>
<div class="container">
</div>
<div class="container">
    <span class="date-test-ran">
        <strong> Project : </strong> ${projectName}
        <strong> &nbsp; Platform :</strong> ${browser}
        <strong> &nbsp; Date : </strong> ${reportDate}
        &nbsp; &nbsp;<span class="label label-info" style="font-size: 14px"><i class="glyphicon glyphicon-time"></i> Run Duration:
        <span class="label label-default" style="font-size: 14px"><%= overallTime %></span></span>
    </span>
</div>
<div class="container">
</div>
<div class="container">
    <h4>OVERALL RUN SUMMARY</h4>
</div>
<div class="container">
    <div class="container">
        <div class="columns" style="width:198px">
            <ul class="runSummary">
                <div>
                    <li style="font-size: 12px; max-width: 100px;">Tests Count
                        <text style="color:rgba(126, 126, 126, 0.51); font-size:20px">&#10144;</text>
                    </li>
                </div>
                <div><li><br/></li></div>
                <div >
                    <li style="font-size: 12px;  max-width: 100px;"> Steps Count
                        <text style="color:rgba(126, 126, 126, 0.51); font-size:20px">&nbsp; &#10144;</text>
                    </li>
                </div>
            </ul>
        </div>
        <div class="columns">
            <ul class="runSummary">
                <div class="half-circle">
                    <h4><li id="Passed"><%= tcPassed %></li></h4>
                </div>
                <li class="header" style="background-color:green">PASS</li>
                <h3><span id="Passed"><%= stepsPassed %></span></h3>
            </ul>
        </div>
        <div class="columns">
            <ul class="runSummary">
                <div class="half-circle">
                    <h4><li id="Failed"><%= tcFailed %></li></h4>
                </div>
                <li class="header" style="background-color:red">FAIL</li>
                <h3><span id="Failed"><%= stepsFailed %></span></h3>
            </ul>
        </div>
        <div class="columns">
            <ul class="runSummary">
                <div class="half-circle">
                    <h4><li id="Skipped"><%= tcSkipped %></li></h4>
                </div>
                <li class="header" style="background-color:grey">SKIP</li>
                <h3><span id="Skipped"><%= stepsSkipped %></span></h3>
            </ul>
        </div>
    </div>
    <div class="chart col-lg-6 col-md-6" id="piechart_testcases"></div>
    <div class="chart col-lg-6 col-md-6" id="piechart_teststeps"></div>
</div>

<div class="container">
    <h4>MODULE LEVEL - SUMMARY</h4>
</div>
<div class="container">
    <table id="moduleSummaryTable" class="table table-striped">
        <thead>
        <th onclick="sortTable('moduleSummaryTable', 0)">MODULE</th>
        <th onclick="sortTable('moduleSummaryTable', 1)"> EXECUTION TIME </th>
        <th onclick="sortTableByNumber('moduleSummaryTable', 2)">TOTAL TESTS </th>
        <th onclick="sortTableByNumber('moduleSummaryTable', 3)" class="Passed">PASSED</th>
        <th onclick="sortTableByNumber('moduleSummaryTable', 4)" class="Failed">FAILED</th>
        <th onclick="sortTableByNumber('moduleSummaryTable', 5)" class="Skipped">SKIPPED</th>
        </thead>
        <tbody>

        <% _.forEach(moduleLevelMap, function(key, val) { %>
            <tr class="bg-info">
                <td align ="center"><%= val %></td>
                <td><%= moduleLevelMap[val].timeInHMS %></td>
                <td><%= moduleLevelMap[val].passCount + moduleLevelMap[val].failCount + moduleLevelMap[val].skipCount %></td>
                <td class="Passed"><%= moduleLevelMap[val].passCount %></td>
                <td class="Failed"><%= moduleLevelMap[val].failCount %></td>
                <td class="Skipped"><%= moduleLevelMap[val].skipCount %></td>
            </tr>
        <% } );%>
        </tbody>
    </table>
</div>

<% if (csvRecordsFail.length > 0 ) { %>
<div class="container">
    <h4> FAILED TESTS </h4>
</div>
<div class="container">
	<label>Search Test(s) &nbsp &nbsp</label>
	<input type="text" id="searchField_Fail" onkeyup="filterTableFailed()" placeholder="Enter Test name / Module name" title="Enter test name" size="170">
</div>
<div class="container">
    <table id="consolidatedFailTable" class="table table-striped">
        <thead style="text-align: left">
            <th width="2%">NO</th>
            <th width="13%">MODULE</th>
            <th width="55%">TEST NAME</th>
            <th width="20%">EXECUTED AT (DURATION)</th>
            <th width="10%">STEP COUNT</th>
        </thead>
        <tbody>
        <% _.each(csvRecordsFail, function(csvRecord, recordIndex) { %>

        <tr data-toggle="collapse" data-target="#<%= csvRecordsFail[recordIndex].tcId %>" class="accordion-toggle" class="bg-info" style="text-align: left">
            <td onclick=toggle_visibility("<%= csvRecordsFail[recordIndex].tcId %>")><%= csvRecordsFail[recordIndex].tcId %></td>
            <td><%= csvRecordsFail[recordIndex].moduleName %></td>
            <td><%= csvRecordsFail[recordIndex].className %></td>
            <td><%= csvRecordsFail[recordIndex].timeStamp %> &nbsp;(<%= csvRecordsFail[recordIndex].time %> s)</td>
            <td>
                <span class="label label-success" style="font-size: 95%"> <%= csvRecordsFail[recordIndex].tcPassedStepsCnt %> </span>
                &nbsp; <span class="label label-danger" style="font-size: 95%"> <%= csvRecordsFail[recordIndex].tcFailedStepsCnt %> </span>
                &nbsp; <span class="label label-default" style="font-size: 95%"> <%= csvRecordsFail[recordIndex].tcSkippedStepsCnt %> </span>
            </td>
        </tr>
        <tr>
            <td colspan="5" style="text-align: left" class="hiddenRow">
                <div class="accordian-body collapse" id="<%= csvRecordsFail[recordIndex].tcId %>">
                <ol>
                    <% _.each(csvRecordsFail[recordIndex].testSteps, function( testStep, stepIndex) { %>
                    <%= csvRecordsFail[recordIndex].testSteps[stepIndex] %>
                        <% if (csvRecordsFail[recordIndex].errorMessages[stepIndex] !== "") { %>
                            <div class="columns" ><br/>
                                <button type="button" class="btn btn-default btn-sm" style="border-color: pink ; background-color: #ebe4e9">
                                    <span class="glyphicon glyphicon-exclamation-sign" ></span><h5> Error Message</h5>
                                </button>
                                <div class="rows" ><br/>
                                    <textarea style="background-color: #fff4fd; font-style: italic; width: 326px; height: 448px; border-color: pink"><%= csvRecordsFail[recordIndex].errorMessages[stepIndex] %></textarea>
                                </div>
                            </div>
                            <% }%>
                        <% if (csvRecordsFail[recordIndex].screenshots[stepIndex] !== "") { %>
                            <div class="rows" ><br/>
                                <button type="button" class="btn btn-default btn-sm" style="border-color: pink; background-color: #ebe4e9">
                                    <span class="glyphicon glyphicon-camera"></span> <h5>Screenshot</h5>
                                </button>
                            </div>
                            <div class="rows" style="border-color: #8b7199" ><br/>
                                <a class="screenshot" href="./screenshots/<%= csvRecordsFail[recordIndex].screenshots[stepIndex] %>" data-lightbox="<%= csvRecordsFail[recordIndex].screenshots[stepIndex] %>">
                                    <img src="./screenshots/<%= csvRecordsFail[recordIndex].screenshots[stepIndex] %>" style="width:28%;height:35%" alt="Screenshot not found: <%= reportDirectory %>/screenshots/<%= csvRecordsFail[recordIndex].screenshots[stepIndex] %>"/>
                                </a>
                            </div>
                            <div class="container"></div>
                        <% }%>
                    <% } );%>
                </ol>
                </div>
            </td>
        </tr>
        <% } );%>
        </tbody>
    </table>
</div>
<% } %>


<% if (csvRecordsPass.length > 0 ) { %>
    <div class="container">
        <h4> PASSED TESTS </h4>
    </div>
    <div class="container">
    	<label>Search Test(s) &nbsp &nbsp</label>
    	<input type="text" id="searchField_Pass" onkeyup="filterTablePassed()" placeholder="Enter Test name / Module name" title="Enter test name" size="170">
    </div>
    <div class="container">
        <table id="consolidatedPassTable" class="table table-striped " style="border-collapse:collapse;">
            <thead style="text-align: left">
                <th width="2%">NO</th>
                <th width="13%">MODULE</th>
                <th width="55%">TEST NAME</th>
                <th width="20%">EXECUTED AT (DURATION)</th>
                <th width="10%">STEP COUNT</th>
            </thead>
            <tbody>
            <% _.each(csvRecordsPass, function(csvRecord, recordIndex) { %>

            <tr data-toggle="collapse" data-target="#<%= csvRecordsPass[recordIndex].tcId %>" class="accordion-toggle" class="bg-info" style="text-align: left">
                <td><%= csvRecordsPass[recordIndex].tcId %></td>
                <td><%= csvRecordsPass[recordIndex].moduleName %></td>
                <td><%= csvRecordsPass[recordIndex].className %></td>
                <td><%= csvRecordsPass[recordIndex].timeStamp %> &nbsp;(<%= csvRecordsPass[recordIndex].time %> s)</td>
                <td>
                    <span class="label label-success" style="font-size: 95%"> <%= csvRecordsPass[recordIndex].tcPassedStepsCnt %> </span>
                    &nbsp; <span class="label label-danger" style="font-size: 95%"> <%= csvRecordsPass[recordIndex].tcFailedStepsCnt %> </span>
                    &nbsp; <span class="label label-default" style="font-size: 95%"> <%= csvRecordsPass[recordIndex].tcSkippedStepsCnt %> </span>
                </td>
            </tr>
            <tr>
                <td colspan="5" style="text-align: left" class="hiddenRow">
                    <div class="accordian-body collapse" id="<%= csvRecordsPass[recordIndex].tcId %>">
                        <ol>
                            <% _.each(csvRecordsPass[recordIndex].testSteps, function( testStep, stepIndex) { %>
                                <%= csvRecordsPass[recordIndex].testSteps[stepIndex] %>
                            <% } );%>
                        </ol>
                    </div>
                </td>
            </tr>
            <% } );%>
            </tbody>
        </table>
    </div>
<% } %>

<% if (csvRecordsSkipped.length > 0 ) { %>
    <div class="container">
        <h4> SKIPPED TESTS </h4>
    </div>
    <div class="container">
    	<label>Search Test(s) &nbsp &nbsp</label>
    	<input type="text" id="searchField_skipped" onkeyup="filterTableSkipped()" placeholder="Enter Test name / Module name" title="Enter test name" size="170" autocomplete="on">
    </div>
    <div class="container">
        <table id="consolidatedSkipTable" class="table table-striped">
        <thead style="text-align: left">
                <th width="2%">NO</th>
                <th width="13%">MODULE</th>
                <th width="55%">TEST NAME</th>
                <th width="20%">EXECUTED AT (DURATION)</th>
                <th width="10%">STEP COUNT</th>
        </thead>
            <tbody>
            <% _.each(csvRecordsSkipped, function(csvRecord, recordIndex) { %>

            <tr data-toggle="collapse" data-target="#<%= csvRecordsSkipped[recordIndex].tcId %>" class="accordion-toggle" class="bg-info" style="text-align: left">
                <td><%= csvRecordsSkipped[recordIndex].tcId %></td>
                <td><%= csvRecordsSkipped[recordIndex].moduleName %></td>
                <td><%= csvRecordsSkipped[recordIndex].className %></td>
                <td><%= csvRecordsSkipped[recordIndex].timeStamp %> &nbsp;(<%= csvRecordsSkipped[recordIndex].time %> s)</td>
                <td>
                    <span class="label label-success" style="font-size: 95%"> <%= csvRecordsSkipped[recordIndex].tcPassedStepsCnt %> </span>
                    &nbsp; <span class="label label-danger" style="font-size: 95%"> <%= csvRecordsSkipped[recordIndex].tcFailedStepsCnt %> </span>
                    &nbsp; <span class="label label-default" style="font-size: 95%"> <%= csvRecordsSkipped[recordIndex].tcSkippedStepsCnt %> </span>
                </td>
            </tr>
            <tr>
                <td colspan="5" style="text-align: left" class="hiddenRow">
                    <div class="accordian-body collapse" id="<%= csvRecordsSkipped[recordIndex].tcId %>">
                        <ol>
                            <% _.each(csvRecordsSkipped[recordIndex].testSteps, function( testStep, stepIndex) { %>
                            <%= csvRecordsSkipped[recordIndex].testSteps[stepIndex] %>
                            <% } );%>
                        </ol>
                    </div>
                </td>
            </tr>
            <% } );%>
            </tbody>
        </table>
    </div>
<% } %>